# This is a basic workflow to help you get started with Actions

name: Build and if tag is set create a release

on:
  [push]

jobs:
  build:
    name: Build and Test the project appstore-reverse-charger for multiple systems
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]    
        
        # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK
      uses: actions/setup-java@v1.3.0
      with:
        java-version:  14
    - name: Ensure to use tagged version
      run: mvn versions:set --file pom.xml -DnewVersion=${GITHUB_REF##*/} # use shell parameter expansion to strip of 'refs/tags'
      if: startsWith(github.ref, 'refs/tags/')
    - name: Build and Test
      run: mvn -B install --file pom.xml

    - name: Upload build artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: charger-${{matrix.os}}.zip
        path: target/charger.zip
  release: 
    name: Creates a release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:

      - id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Automatic created release by github actions.
          draft: false
          prerelease: false
      - name: Downloads generated files (Linux)
        uses: actions/download-artifact@latest
        with:
          name: charger-ubuntu-latest.zip
      - uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./charger-ubuntu-latest.zip//charger-ubuntu-latest.zip
          asset_name: charger-linux.zip
          asset_content_type: application/zip
      - name: Downloads generated files (Windows)
        uses: actions/download-artifact@v1
        with:
          name: charger-windows-latest.zip
      - uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./charger-windows-latest.zip #javafx-testkit-windows-latest.zip
          asset_name: charger-windows.zip
          asset_content_type: application/zip
      - name: Downloads generated files (MacOS)
        uses: actions/download-artifact@v1
        with:
          name: javafx-testkit-macOS-latest.zip
      - uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./charger-macOS-latest.zip #/javafx-testkit-macOS-latest.zip
          asset_name: charger-macOS.zip
          asset_content_type: application/zip
